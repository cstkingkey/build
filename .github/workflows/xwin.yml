name: Build xwin

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      clean:
        description: 'Clean Cache'
        required: false
        default: 'false'
  push:
    branches:
      - main
    paths:
      - 'open.config'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede.git
  ROOTFS_URL: https://github.com/cstkingkey/build/releases/download/rootfs-2023.06.22
  CLANG_URL: https://github.com/cstkingkey/build/releases/download/clang-release%2F16.x-2023.06.19-1706/clang.tar.xz
  
jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        arch: [x86, x86_64, aarch, aarch64]

    steps:
    - name: Checkout
      uses: actions/checkout@main
    
    - name: Checkout xwin
      uses: actions/checkout@v3
      with:
        repository: Jake-Shadle/xwin
        path: xwin

    - name: Initialization environment
      id: env
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        # may fail
        echo "::set-output name=status::success"

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Build and package
      id: build
      if: steps.env.outputs.status == 'success' && !cancelled()
      run: |
        arch=${{ matrix.arch }}
        cd xwin
        cargo install xwin --locked
        /home/runner/.cargo/bin/xwin --accept-license --arch $arch splat --include-debug-libs
        mv .xwin-cache/splat xwin
        tar cJF xwin-$arch.tar.xz xwin
        echo "ROOTFS=$PWD/xwin-$arch.tar.xz" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Create tag
      id: tag
      if: steps.build.outputs.status == 'success' && !cancelled()
      run: |
        touch release.txt
        echo "xwin" >> release.txt
        echo "::set-output name=release_tag::fltk-$(date +"%Y.%m.%d")"
        echo "::set-output name=status::success"

    - name: Release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          ${{ env.ROOTFS }}